// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaMaster.DataAccess.EF;

#nullable disable

namespace PizzaMaster.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240222212330_initMigration")]
    partial class initMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Dictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId")
                        .IsUnique()
                        .HasFilter("[LanguageId] IS NOT NULL");

                    b.ToTable("Dictionaries");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Dropdown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DropdownImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropdownName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Header")
                        .HasColumnType("bit");

                    b.Property<bool>("NavigationBar")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Dropdown");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.DropdownRelationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DropItemId")
                        .HasColumnType("int");

                    b.Property<int?>("DropdownId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DropItemId");

                    b.HasIndex("DropdownId");

                    b.ToTable("DropdownRelationItem");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.DropItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DropItemImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DropItem");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Error", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Detaljnije")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VremeGreske")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.HomeDesc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.ToTable("HomeDescs");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.NameRelationDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DictionaryId")
                        .HasColumnType("int");

                    b.Property<int?>("DropdownId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryId");

                    b.HasIndex("DropdownId");

                    b.HasIndex("LanguageId")
                        .IsUnique()
                        .HasFilter("[LanguageId] IS NOT NULL");

                    b.ToTable("NameRelationDictionaries");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.PasteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.ToTable("PasteTypes");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.PizzaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.ToTable("PizzaTypes");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Restoran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("RestoranIme")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Restorans");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestoranId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("RestoranId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.UserLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Dictionary", b =>
                {
                    b.HasOne("PizzaMaster.Domain.Entities.Language", "Language")
                        .WithOne("Dictionary")
                        .HasForeignKey("PizzaMaster.Domain.Entities.Dictionary", "LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.DropdownRelationItem", b =>
                {
                    b.HasOne("PizzaMaster.Domain.Entities.DropItem", "DropItem")
                        .WithMany("DropdownRelationItems")
                        .HasForeignKey("DropItemId");

                    b.HasOne("PizzaMaster.Domain.Entities.Dropdown", "Dropdown")
                        .WithMany("DropdownRelationItems")
                        .HasForeignKey("DropdownId");

                    b.Navigation("DropItem");

                    b.Navigation("Dropdown");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.HomeDesc", b =>
                {
                    b.HasOne("PizzaMaster.Domain.Entities.Image", "Image")
                        .WithOne("HomeDesc")
                        .HasForeignKey("PizzaMaster.Domain.Entities.HomeDesc", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.NameRelationDictionary", b =>
                {
                    b.HasOne("PizzaMaster.Domain.Entities.Dictionary", "Dictionary")
                        .WithMany("NameRelationDictionaries")
                        .HasForeignKey("DictionaryId");

                    b.HasOne("PizzaMaster.Domain.Entities.Dropdown", "Dropdown")
                        .WithMany("NameRelationDictionaries")
                        .HasForeignKey("DropdownId");

                    b.HasOne("PizzaMaster.Domain.Entities.Language", "Language")
                        .WithOne("NameRelationDictionary")
                        .HasForeignKey("PizzaMaster.Domain.Entities.NameRelationDictionary", "LanguageId");

                    b.Navigation("Dictionary");

                    b.Navigation("Dropdown");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.PasteType", b =>
                {
                    b.HasOne("PizzaMaster.Domain.Entities.Image", "Image")
                        .WithOne("PasteType")
                        .HasForeignKey("PizzaMaster.Domain.Entities.PasteType", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.PizzaType", b =>
                {
                    b.HasOne("PizzaMaster.Domain.Entities.Image", "Image")
                        .WithOne("PizzaType")
                        .HasForeignKey("PizzaMaster.Domain.Entities.PizzaType", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.User", b =>
                {
                    b.HasOne("PizzaMaster.Domain.Entities.Image", "Image")
                        .WithOne("User")
                        .HasForeignKey("PizzaMaster.Domain.Entities.User", "ImageId");

                    b.HasOne("PizzaMaster.Domain.Entities.Restoran", "Restoran")
                        .WithMany("Users")
                        .HasForeignKey("RestoranId");

                    b.Navigation("Image");

                    b.Navigation("Restoran");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("PizzaMaster.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("PizzaMaster.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Dictionary", b =>
                {
                    b.Navigation("NameRelationDictionaries");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Dropdown", b =>
                {
                    b.Navigation("DropdownRelationItems");

                    b.Navigation("NameRelationDictionaries");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.DropItem", b =>
                {
                    b.Navigation("DropdownRelationItems");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Image", b =>
                {
                    b.Navigation("HomeDesc");

                    b.Navigation("PasteType");

                    b.Navigation("PizzaType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Language", b =>
                {
                    b.Navigation("Dictionary");

                    b.Navigation("NameRelationDictionary");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Restoran", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("PizzaMaster.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
